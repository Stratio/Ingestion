morphlines : [
  {
    id: morphline1

    importCommands : ["org.kitesdk.**", "com.stratio.morphlines.**"]

    commands : [
      {
        readLine {
          charset : UTF-8
        }
      }
      {
        split {
          inputField: message
          outputFields : [Year,Month,DayofMonth,DayOfWeek,DepTime,CRSDepTime,ArrTime,CRSArrTime,UniqueCarrier,FlightNum,TailNum,ActualElapsedTime,CRSElapsedTime,AirTime,ArrDelay,DepDelay,Origin,Dest,Distance,TaxiIn,TaxiOut,Cancelled,CancellationCode,Diverted,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay]
          separator : ","
        }
      }
      {
        if {
          conditions : [
            { equals { DepTime : NA } }
          ]
          then : [
            { dropRecord {} }
          ]
        }
      }
      {
        if {
          conditions : [
            { equals { ArrDelay : NA } }
          ]
          then : [
            { dropRecord {} }
          ]
        }
      }
      {
        java {
          code : """
            String depTime = (String) record.getFirstValue("DepTime");
            if (depTime.length() < 4) {
              return true;
            }
            String hour = depTime.substring(0,2);
            if("24".equals("hour")) {
              hour = "00";
            }
            String minute = depTime.substring(2,4);
            record.put("Hour", hour);
            record.put("Minute", minute);
            return child.process(record);
          """
        }
      }
      {
        java {
          code : """
            String month = (String) record.getFirstValue("Month");
            if (month.length() < 2) {
              record.replaceValues("Month", "0" + month);
            }
            String day = (String) record.getFirstValue("DayofMonth");
            if (day.length() < 2) {
              record.replaceValues("DayofMonth", "0" + day);
            }
            return child.process(record);
          """
        }
      }
      {
        addValues {
          timestamp : "@{year}-@{month}-@{day}T@{hour}:@{minute}:@{second}Z"
        }
      }
      {
        addValues {
          flight_date : "@{Year}-@{Month}-@{DayofMonth}T@{Hour}:@{Minute}:00Z"
        }
      }
      {
        convertTimestamp {
          field : flight_date
          inputFormats : ["yyyy-MM-dd'T'HH:mm:ss'Z'"]
          inputTimezone : UTC
          outputFormat : unixTimeInMillis
          outputTimezone : UTC
        }
      }
      {
        addValues {
          "flight_date" : "@{fligh_date}"
        }
      }
      {
        geolocateAirportCode {
          origin: "Origin"
          dest: "Dest"
          originLatLon: "originLatLon"
          destLatLon: "destLatLon"
        }
      }
      {
        removeFields {
          whitelist : ["literal:flight_date", "literal:originLatLon", "literal:destLatLon", "literal:Origin", "literal:Dest", "literal:ArrDelay", "literal:DepDelay", "literal:UniqueCarrier"]
        }
      }
      #{ logWarn { format : "output record: {}", args : ["@{}"] } }
    ]
  }
]